   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"simpleserial.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.led_ok,"ax",%progbits
  16              		.align	1
  17              		.weak	led_ok
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	led_ok:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 ".././hal/hal.h"
   1:.././hal/hal.h **** /*
   2:.././hal/hal.h ****     This file is part of the ChipWhisperer Example Targets
   3:.././hal/hal.h ****     Copyright (C) 2012-2015 NewAE Technology Inc.
   4:.././hal/hal.h **** 
   5:.././hal/hal.h ****     This program is free software: you can redistribute it and/or modify
   6:.././hal/hal.h ****     it under the terms of the GNU General Public License as published by
   7:.././hal/hal.h ****     the Free Software Foundation, either version 3 of the License, or
   8:.././hal/hal.h ****     (at your option) any later version.
   9:.././hal/hal.h **** 
  10:.././hal/hal.h ****     This program is distributed in the hope that it will be useful,
  11:.././hal/hal.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:.././hal/hal.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:.././hal/hal.h ****     GNU General Public License for more details.
  14:.././hal/hal.h **** 
  15:.././hal/hal.h ****     You should have received a copy of the GNU General Public License
  16:.././hal/hal.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:.././hal/hal.h **** */
  18:.././hal/hal.h **** 
  19:.././hal/hal.h **** #ifndef HAL_H_
  20:.././hal/hal.h **** #define HAL_H_
  21:.././hal/hal.h **** 
  22:.././hal/hal.h **** #include <stdint.h>
  23:.././hal/hal.h **** 
  24:.././hal/hal.h **** void platform_init(void);
  25:.././hal/hal.h **** 
  26:.././hal/hal.h **** //PLATFORM Define Types
  27:.././hal/hal.h **** #define CW301_AVR      1
  28:.././hal/hal.h **** #define CW301_XMEGA    2
  29:.././hal/hal.h **** #define CW303          3
  30:.././hal/hal.h **** #define CW304          4
  31:.././hal/hal.h **** #define CW308_MEGARF   8
  32:.././hal/hal.h **** #define CW308_PIC24FJ  10
  33:.././hal/hal.h **** #define CW308_SAM4L    11
  34:.././hal/hal.h **** #define CW308_SI4010   12
  35:.././hal/hal.h **** #define CW308_MPC5748G 13
  36:.././hal/hal.h **** #define CW308_STM32F0  14
  37:.././hal/hal.h **** #define CW308_STM32F1  15
  38:.././hal/hal.h **** #define CW308_STM32F2  16
  39:.././hal/hal.h **** #define CW308_STM32F3  17
  40:.././hal/hal.h **** #define CW308_STM32F4  18
  41:.././hal/hal.h **** #define CW308_CC2538   19
  42:.././hal/hal.h **** #define CW308_K24F     20
  43:.././hal/hal.h **** #define CW308_NRF52840 21
  44:.././hal/hal.h **** #define CW308_AURIX    22
  45:.././hal/hal.h **** #define CW308_SAML11   23
  46:.././hal/hal.h **** #define CW308_EFM32TG11B 24
  47:.././hal/hal.h **** #define CW308_K82F     25
  48:.././hal/hal.h **** #define CW308_LPC55S6X 26
  49:.././hal/hal.h **** #define CW308_PSOC62   27
  50:.././hal/hal.h **** #define CW308_IMXRT1062 28
  51:.././hal/hal.h **** #define CW308_FE310    29
  52:.././hal/hal.h **** #define CW308_EFR32MG21A  30
  53:.././hal/hal.h **** #define CW308_EFM32GG11  31
  54:.././hal/hal.h **** #define CW308_STM32L5  32
  55:.././hal/hal.h **** #define CW308_STM32L4  33
  56:.././hal/hal.h **** #define CW308_RX65N  34
  57:.././hal/hal.h **** #define CW308_MPC5676R 35
  58:.././hal/hal.h **** #define CW308_NEORV32  36
  59:.././hal/hal.h **** #define CW305_IBEX  37
  60:.././hal/hal.h **** 
  61:.././hal/hal.h **** //HAL_TYPE Define Types
  62:.././hal/hal.h **** #define HAL_avr      1
  63:.././hal/hal.h **** #define HAL_xmega    2
  64:.././hal/hal.h **** #define HAL_pic24f   3
  65:.././hal/hal.h **** #define HAL_sam4l    4
  66:.././hal/hal.h **** #define HAL_stm32f0  5
  67:.././hal/hal.h **** #define HAL_stm32f1  6
  68:.././hal/hal.h **** #define HAL_stm32f2  7
  69:.././hal/hal.h **** #define HAL_stm32f3  8
  70:.././hal/hal.h **** #define HAL_stm32f4  9
  71:.././hal/hal.h **** #define HAL_cc2538   10
  72:.././hal/hal.h **** #define HAL_k24f     11
  73:.././hal/hal.h **** #define HAL_nrf52840 12
  74:.././hal/hal.h **** #define HAL_stm32f0_nano 13
  75:.././hal/hal.h **** #define HAL_aurix    14
  76:.././hal/hal.h **** #define HAL_saml11   15
  77:.././hal/hal.h **** #define HAL_efm32tg11b 16
  78:.././hal/hal.h **** #define HAL_k82f     17
  79:.././hal/hal.h **** #define HAL_lpc55s6x 18
  80:.././hal/hal.h **** #define HAL_psoc62   19
  81:.././hal/hal.h **** #define HAL_imxrt1062 20
  82:.././hal/hal.h **** #define HAL_fe310    21
  83:.././hal/hal.h **** #define HAL_efr32mg21a 22
  84:.././hal/hal.h **** #define HAL_efm32gg11 23
  85:.././hal/hal.h **** #define HAL_stm32l5 24
  86:.././hal/hal.h **** #define HAL_stm32l4 25
  87:.././hal/hal.h **** #define HAL_rx65n 26
  88:.././hal/hal.h **** #define HAL_mpc5676r 27
  89:.././hal/hal.h **** #define HAL_neorv32  28
  90:.././hal/hal.h **** #define HAL_sam4s  29
  91:.././hal/hal.h **** #define HAL_ibex  30
  92:.././hal/hal.h **** 
  93:.././hal/hal.h **** #if HAL_TYPE == HAL_avr
  94:.././hal/hal.h ****     #include <avr/io.h>
  95:.././hal/hal.h ****     #include <util/delay.h>
  96:.././hal/hal.h ****     #include "avr/avr_hal.h"
  97:.././hal/hal.h **** #elif HAL_TYPE == HAL_xmega
  98:.././hal/hal.h ****     #include <avr/io.h>
  99:.././hal/hal.h ****     #include <util/delay.h>
 100:.././hal/hal.h ****     #include "xmega/xmega_hal.h"
 101:.././hal/hal.h ****     #include "xmega/avr_compiler.h"
 102:.././hal/hal.h **** #elif HAL_TYPE == HAL_pic24f
 103:.././hal/hal.h ****     #include <xc.h>
 104:.././hal/hal.h ****     #include "pic24f/pic24f_hal.h"
 105:.././hal/hal.h ****     #include "pic24f/uart.h"
 106:.././hal/hal.h **** #elif HAL_TYPE == HAL_sam4l
 107:.././hal/hal.h ****     #include "sam4l/sam4l_hal.h"
 108:.././hal/hal.h **** #elif HAL_TYPE == HAL_stm32f0
 109:.././hal/hal.h **** 	#include "stm32f0/stm32f0_hal.h"
 110:.././hal/hal.h **** #elif HAL_TYPE == HAL_stm32f1
 111:.././hal/hal.h **** 	#include "stm32f1/stm32f1_hal.h"
 112:.././hal/hal.h **** #elif HAL_TYPE == HAL_stm32f2
 113:.././hal/hal.h **** 	#include "stm32f2/stm32f2_hal.h"
 114:.././hal/hal.h **** #elif HAL_TYPE == HAL_stm32f3
 115:.././hal/hal.h **** 	#include "stm32f3/stm32f3_hal.h"
 116:.././hal/hal.h **** 	#ifdef SECCAN
 117:.././hal/hal.h **** 		#include "stm32f3/stm32f3_hal_seccan.h"
 118:.././hal/hal.h **** 	#endif
 119:.././hal/hal.h **** #elif HAL_TYPE == HAL_stm32f4
 120:.././hal/hal.h **** 	#include "stm32f4/stm32f4_hal.h"
 121:.././hal/hal.h **** #elif HAL_TYPE == HAL_cc2538
 122:.././hal/hal.h **** 	#include "cc2538/cc2538_hal.h"
 123:.././hal/hal.h **** #elif HAL_TYPE == HAL_k24f
 124:.././hal/hal.h ****     #include "k24f/k24f_hal.h"
 125:.././hal/hal.h **** #elif HAL_TYPE == HAL_k82f
 126:.././hal/hal.h **** #include "k82f/k82f_hal.h"
 127:.././hal/hal.h **** #elif HAL_TYPE == HAL_nrf52840
 128:.././hal/hal.h ****     #include "nrf52840/nrf52840_hal.h"   
 129:.././hal/hal.h **** #elif HAL_TYPE == HAL_stm32f0_nano
 130:.././hal/hal.h ****     #include "stm32f0/stm32f0_hal.h" 
 131:.././hal/hal.h ****     void led_error(unsigned int status);
 132:.././hal/hal.h ****     void led_ok(unsigned int status);
 133:.././hal/hal.h **** #elif HAL_TYPE == HAL_aurix
 134:.././hal/hal.h ****     #include "aurix/aurix_hal.h"
 135:.././hal/hal.h **** #elif HAL_TYPE == HAL_saml11
 136:.././hal/hal.h ****      #include "saml11/saml11_hal.h"
 137:.././hal/hal.h **** #elif HAL_TYPE == HAL_efm32tg11b
 138:.././hal/hal.h ****      #include "efm32tg11b/efm32tg11b_hal.h"
 139:.././hal/hal.h **** #elif HAL_TYPE == HAL_lpc55s6x
 140:.././hal/hal.h ****      #include "lpc55s6x/lpc55s6x_hal.h"
 141:.././hal/hal.h **** #elif HAL_TYPE == HAL_psoc62
 142:.././hal/hal.h ****     #include "psoc62/psoc62_hal.h"
 143:.././hal/hal.h **** #elif HAL_TYPE == HAL_imxrt1062
 144:.././hal/hal.h ****     #include "imxrt1062/imxrt1062_hal.h"
 145:.././hal/hal.h **** #elif HAL_TYPE == HAL_fe310
 146:.././hal/hal.h ****     #include "fe310/fe310_hal.h"
 147:.././hal/hal.h **** #elif HAL_TYPE == HAL_efr32mg21a
 148:.././hal/hal.h ****     #include "efr32mg21a/efr32mg21a_hal.h"
 149:.././hal/hal.h **** #elif HAL_TYPE == HAL_efm32gg11
 150:.././hal/hal.h ****     #include "efm32gg11/efm32gg11_hal.h"
 151:.././hal/hal.h **** #elif HAL_TYPE == HAL_stm32l5
 152:.././hal/hal.h ****     #include "stm32l5/stm32l5_hal.h"
 153:.././hal/hal.h **** #elif HAL_TYPE == HAL_stm32l4
 154:.././hal/hal.h ****     #include "stm32l4/stm32l4_hal.h"
 155:.././hal/hal.h **** #elif HAL_TYPE == HAL_rx65n
 156:.././hal/hal.h ****     #include "rx65n/rx65n_hal.h"
 157:.././hal/hal.h **** #elif HAL_TYPE == HAL_mpc5676r
 158:.././hal/hal.h ****     #include "mpc5676r/MPC5676R_hal.h"
 159:.././hal/hal.h **** #elif HAL_TYPE == HAL_neorv32
 160:.././hal/hal.h ****     #include "neorv32/neorv32_hal.h"
 161:.././hal/hal.h **** #elif HAL_TYPE == HAL_sam4s
 162:.././hal/hal.h ****     #include "sam4s/sam4s_hal.h"
 163:.././hal/hal.h **** #elif HAL_TYPE == HAL_ibex
 164:.././hal/hal.h ****     #include "ibex/ibex_hal.h"
 165:.././hal/hal.h **** #else
 166:.././hal/hal.h ****     #error "Unsupported HAL Type"
 167:.././hal/hal.h **** #endif
 168:.././hal/hal.h **** 
 169:.././hal/hal.h **** #if PLATFORM == CW308_MEGARF
 170:.././hal/hal.h ****     #undef trigger_setup
 171:.././hal/hal.h ****     #undef trigger_high
 172:.././hal/hal.h ****     #undef trigger_low
 173:.././hal/hal.h ****     #define trigger_setup() DDRD |= 0x02
 174:.././hal/hal.h ****     #define trigger_high()  PORTD |= 0x02
 175:.././hal/hal.h ****     #define trigger_low()   PORTD &= ~(0x02)
 176:.././hal/hal.h ****     
 177:.././hal/hal.h ****     #define HW_AES128_Init();      AES_CTRL = 0x00;
 178:.././hal/hal.h **** 
 179:.././hal/hal.h ****     #define HW_AES128_LoadKey(key);  for (uint8_t i = 0; i < 16; i++){ \
 180:.././hal/hal.h ****                                      AES_KEY = *(key+i); \
 181:.././hal/hal.h ****                                   }
 182:.././hal/hal.h **** 
 183:.././hal/hal.h ****     #define HW_AES128_Enc(pt);  for (uint8_t i = 0; i < 16; i++){ \
 184:.././hal/hal.h ****                                     AES_STATE = *(pt+i); \
 185:.././hal/hal.h ****                                 } \
 186:.././hal/hal.h ****                                   \
 187:.././hal/hal.h ****                                 AES_CTRL |= 1<<AES_REQUEST; \
 188:.././hal/hal.h ****                                   \
 189:.././hal/hal.h ****                                 /*Wait for done  */ \
 190:.././hal/hal.h ****                                 while ((AES_STATUS & (1<<AES_DONE)) == 0){ \
 191:.././hal/hal.h ****                                     ; \
 192:.././hal/hal.h ****                                 } \
 193:.././hal/hal.h ****                                   \
 194:.././hal/hal.h ****                                 for (uint8_t i = 0; i < 16; i++){ \
 195:.././hal/hal.h ****                                     *(pt+i) = AES_STATE; \
 196:.././hal/hal.h ****                                 }
 197:.././hal/hal.h ****     
 198:.././hal/hal.h **** #endif
 199:.././hal/hal.h **** 
 200:.././hal/hal.h **** __attribute__((weak)) void led_ok(unsigned int status)
 201:.././hal/hal.h **** {
  28              		.loc 1 201 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 202:.././hal/hal.h **** }
  33              		.loc 1 202 1 view .LVU1
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE0:
  38              		.section	.text.led_error,"ax",%progbits
  39              		.align	1
  40              		.weak	led_error
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu softvfp
  46              	led_error:
  47              	.LFB14:
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52 0000 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE14:
  56              		.section	.text.ss_crc,"ax",%progbits
  57              		.align	1
  58              		.global	ss_crc
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	ss_crc:
  65              	.LVL1:
  66              	.LFB2:
  67              		.file 2 ".././simpleserial/simpleserial.c"
   1:.././simpleserial/simpleserial.c **** // simpleserial.c
   2:.././simpleserial/simpleserial.c **** 
   3:.././simpleserial/simpleserial.c **** #include "simpleserial.h"
   4:.././simpleserial/simpleserial.c **** #include <stdint.h>
   5:.././simpleserial/simpleserial.c **** #include "hal.h"
   6:.././simpleserial/simpleserial.c **** 
   7:.././simpleserial/simpleserial.c **** 
   8:.././simpleserial/simpleserial.c **** #define MAX_SS_CMDS 16
   9:.././simpleserial/simpleserial.c **** static int num_commands = 0;
  10:.././simpleserial/simpleserial.c **** 
  11:.././simpleserial/simpleserial.c **** #define MAX_SS_LEN 256
  12:.././simpleserial/simpleserial.c **** 
  13:.././simpleserial/simpleserial.c **** //#define SS_VER_1_0 0
  14:.././simpleserial/simpleserial.c **** //#define SS_VER_1_1 1
  15:.././simpleserial/simpleserial.c **** //#define SS_VER_2_0 2
  16:.././simpleserial/simpleserial.c **** 
  17:.././simpleserial/simpleserial.c **** 
  18:.././simpleserial/simpleserial.c **** // 0xA6 formerly 
  19:.././simpleserial/simpleserial.c **** #define CW_CRC 0x4D 
  20:.././simpleserial/simpleserial.c **** uint8_t ss_crc(uint8_t *buf, uint8_t len)
  21:.././simpleserial/simpleserial.c **** {
  68              		.loc 2 21 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73              		.loc 2 21 1 is_stmt 0 view .LVU3
  74 0000 0346     		mov	r3, r0
  22:.././simpleserial/simpleserial.c **** 	unsigned int k = 0;
  75              		.loc 2 22 2 is_stmt 1 view .LVU4
  76              	.LVL2:
  23:.././simpleserial/simpleserial.c **** 	uint8_t crc = 0x00;
  77              		.loc 2 23 2 view .LVU5
  24:.././simpleserial/simpleserial.c **** 	while (len--) {
  78              		.loc 2 24 2 view .LVU6
  79 0002 0144     		add	r1, r1, r0
  80              	.LVL3:
  23:.././simpleserial/simpleserial.c **** 	uint8_t crc = 0x00;
  81              		.loc 2 23 10 is_stmt 0 view .LVU7
  82 0004 0020     		movs	r0, #0
  83              	.LVL4:
  84              	.L4:
  85              		.loc 2 24 8 is_stmt 1 view .LVU8
  86              		.loc 2 24 8 is_stmt 0 view .LVU9
  87 0006 8B42     		cmp	r3, r1
  88 0008 00D1     		bne	.L8
  25:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  26:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
  27:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
  28:.././simpleserial/simpleserial.c **** 		}
  29:.././simpleserial/simpleserial.c **** 	}
  30:.././simpleserial/simpleserial.c **** 	return crc;
  89              		.loc 2 30 2 is_stmt 1 view .LVU10
  31:.././simpleserial/simpleserial.c **** 
  32:.././simpleserial/simpleserial.c **** }
  90              		.loc 2 32 1 is_stmt 0 view .LVU11
  91 000a 7047     		bx	lr
  92              	.L8:
  25:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  93              		.loc 2 25 3 is_stmt 1 view .LVU12
  94              	.LVL5:
  25:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  95              		.loc 2 25 7 is_stmt 0 view .LVU13
  96 000c 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  97              	.LVL6:
  25:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  98              		.loc 2 25 7 view .LVU14
  99 0010 5040     		eors	r0, r0, r2
 100              	.LVL7:
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 101              		.loc 2 26 3 is_stmt 1 view .LVU15
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 102              		.loc 2 26 15 view .LVU16
  25:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
 103              		.loc 2 25 7 is_stmt 0 view .LVU17
 104 0012 0822     		movs	r2, #8
 105              	.LVL8:
 106              	.L7:
  27:.././simpleserial/simpleserial.c **** 		}
 107              		.loc 2 27 4 is_stmt 1 view .LVU18
  27:.././simpleserial/simpleserial.c **** 		}
 108              		.loc 2 27 8 is_stmt 0 view .LVU19
 109 0014 10F0800F 		tst	r0, #128
 110 0018 4FEA4000 		lsl	r0, r0, #1
 111              	.LVL9:
  27:.././simpleserial/simpleserial.c **** 		}
 112              		.loc 2 27 34 view .LVU20
 113 001c 18BF     		it	ne
 114 001e 80F04D00 		eorne	r0, r0, #77
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 115              		.loc 2 26 3 view .LVU21
 116 0022 013A     		subs	r2, r2, #1
 117              	.LVL10:
  27:.././simpleserial/simpleserial.c **** 		}
 118              		.loc 2 27 8 view .LVU22
 119 0024 C0B2     		uxtb	r0, r0
 120              	.LVL11:
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 121              		.loc 2 26 22 is_stmt 1 view .LVU23
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 122              		.loc 2 26 15 view .LVU24
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 123              		.loc 2 26 3 is_stmt 0 view .LVU25
 124 0026 F5D1     		bne	.L7
 125 0028 EDE7     		b	.L4
 126              		.cfi_endproc
 127              	.LFE2:
 129              		.section	.text.hex_decode,"ax",%progbits
 130              		.align	1
 131              		.global	hex_decode
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu softvfp
 137              	hex_decode:
 138              	.LVL12:
 139              	.LFB3:
  33:.././simpleserial/simpleserial.c **** 
  34:.././simpleserial/simpleserial.c **** // [B_STUFF, CMD, SCMD, LEN, B_STUFF, DATA..., CRC, TERM]
  35:.././simpleserial/simpleserial.c **** 
  36:.././simpleserial/simpleserial.c **** //#define SS_VER SS_VER_2_0
  37:.././simpleserial/simpleserial.c **** #if SS_VER == SS_VER_2_0
  38:.././simpleserial/simpleserial.c **** #error "SS_VER_2_0 is deprecated! Use SS_VER_2_1 instead."
  39:.././simpleserial/simpleserial.c **** #elif SS_VER == SS_VER_2_1
  40:.././simpleserial/simpleserial.c **** 
  41:.././simpleserial/simpleserial.c **** int hex_decode(int len, char* ascii_buf, uint8_t* data_buf)
  42:.././simpleserial/simpleserial.c **** {
 140              		.loc 2 42 1 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
  43:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < len; i++)
 144              		.loc 2 43 2 view .LVU27
 145              	.LBB2:
 146              		.loc 2 43 6 view .LVU28
 147              		.loc 2 43 6 is_stmt 0 view .LVU29
 148              	.LBE2:
  42:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < len; i++)
 149              		.loc 2 42 1 view .LVU30
 150 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 151              	.LCFI0:
 152              		.cfi_def_cfa_offset 20
 153              		.cfi_offset 4, -20
 154              		.cfi_offset 5, -16
 155              		.cfi_offset 6, -12
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158              	.LBB7:
 159              		.loc 2 43 10 view .LVU31
 160 0002 0025     		movs	r5, #0
 161              	.LBB3:
  44:.././simpleserial/simpleserial.c **** 	{
  45:.././simpleserial/simpleserial.c **** 		char n_hi = ascii_buf[2*i];
  46:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
 162              		.loc 2 46 8 view .LVU32
 163 0004 4F1C     		adds	r7, r1, #1
 164              	.LVL13:
 165              	.L11:
 166              		.loc 2 46 8 view .LVU33
 167              	.LBE3:
  43:.././simpleserial/simpleserial.c **** 	{
 168              		.loc 2 43 17 is_stmt 1 discriminator 1 view .LVU34
  43:.././simpleserial/simpleserial.c **** 	{
 169              		.loc 2 43 2 is_stmt 0 discriminator 1 view .LVU35
 170 0006 8542     		cmp	r5, r0
 171 0008 01DB     		blt	.L21
 172              	.LBE7:
  47:.././simpleserial/simpleserial.c **** 
  48:.././simpleserial/simpleserial.c **** 		if(n_lo >= '0' && n_lo <= '9')
  49:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
  50:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
  51:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
  52:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
  53:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
  54:.././simpleserial/simpleserial.c **** 		else
  55:.././simpleserial/simpleserial.c **** 			return 1;
  56:.././simpleserial/simpleserial.c **** 
  57:.././simpleserial/simpleserial.c **** 		if(n_hi >= '0' && n_hi <= '9')
  58:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
  59:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'A' && n_hi <= 'F')
  60:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
  61:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
  62:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
  63:.././simpleserial/simpleserial.c **** 		else
  64:.././simpleserial/simpleserial.c **** 			return 1;
  65:.././simpleserial/simpleserial.c **** 	}
  66:.././simpleserial/simpleserial.c **** 
  67:.././simpleserial/simpleserial.c **** 	return 0;
 173              		.loc 2 67 9 view .LVU36
 174 000a 0020     		movs	r0, #0
 175              	.LVL14:
 176              		.loc 2 67 9 view .LVU37
 177 000c 21E0     		b	.L10
 178              	.LVL15:
 179              	.L21:
 180              	.LBB8:
 181              	.LBB4:
  45:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
 182              		.loc 2 45 3 is_stmt 1 view .LVU38
  46:.././simpleserial/simpleserial.c **** 
 183              		.loc 2 46 8 is_stmt 0 view .LVU39
 184 000e 17F81540 		ldrb	r4, [r7, r5, lsl #1]	@ zero_extendqisi2
  45:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
 185              		.loc 2 45 8 view .LVU40
 186 0012 11F81530 		ldrb	r3, [r1, r5, lsl #1]	@ zero_extendqisi2
 187              	.LVL16:
  46:.././simpleserial/simpleserial.c **** 
 188              		.loc 2 46 3 is_stmt 1 view .LVU41
  48:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 189              		.loc 2 48 3 view .LVU42
  48:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 190              		.loc 2 48 18 is_stmt 0 view .LVU43
 191 0016 A4F13006 		sub	r6, r4, #48
 192 001a F6B2     		uxtb	r6, r6
  48:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 193              		.loc 2 48 5 view .LVU44
 194 001c 092E     		cmp	r6, #9
 195 001e 0CD8     		bhi	.L12
  49:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
 196              		.loc 2 49 4 is_stmt 1 view .LVU45
  49:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
 197              		.loc 2 49 16 is_stmt 0 view .LVU46
 198 0020 1670     		strb	r6, [r2]
 199              	.LVL17:
 200              	.L13:
  57:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 201              		.loc 2 57 3 is_stmt 1 view .LVU47
  57:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 202              		.loc 2 57 18 is_stmt 0 view .LVU48
 203 0022 A3F13004 		sub	r4, r3, #48
  57:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 204              		.loc 2 57 5 view .LVU49
 205 0026 E6B2     		uxtb	r6, r4
 206 0028 092E     		cmp	r6, #9
 207 002a 15D8     		bhi	.L17
 208              	.L24:
  60:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 209              		.loc 2 60 16 view .LVU50
 210 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 211              	.LVL18:
  60:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 212              		.loc 2 60 16 view .LVU51
 213 002e 43EA0413 		orr	r3, r3, r4, lsl #4
 214              	.L23:
  62:.././simpleserial/simpleserial.c **** 		else
 215              		.loc 2 62 16 view .LVU52
 216 0032 1370     		strb	r3, [r2]
 217              	.LBE4:
  43:.././simpleserial/simpleserial.c **** 	{
 218              		.loc 2 43 26 is_stmt 1 view .LVU53
  43:.././simpleserial/simpleserial.c **** 	{
 219              		.loc 2 43 27 is_stmt 0 view .LVU54
 220 0034 0135     		adds	r5, r5, #1
 221              	.LVL19:
  43:.././simpleserial/simpleserial.c **** 	{
 222              		.loc 2 43 27 view .LVU55
 223 0036 0132     		adds	r2, r2, #1
 224 0038 E5E7     		b	.L11
 225              	.LVL20:
 226              	.L12:
 227              	.LBB5:
  50:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
 228              		.loc 2 50 8 is_stmt 1 view .LVU56
  50:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
 229              		.loc 2 50 10 is_stmt 0 view .LVU57
 230 003a A4F14106 		sub	r6, r4, #65
 231 003e 052E     		cmp	r6, #5
 232 0040 02D8     		bhi	.L14
  51:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
 233              		.loc 2 51 4 is_stmt 1 view .LVU58
  51:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
 234              		.loc 2 51 29 is_stmt 0 view .LVU59
 235 0042 373C     		subs	r4, r4, #55
 236              	.LVL21:
 237              	.L22:
  53:.././simpleserial/simpleserial.c **** 		else
 238              		.loc 2 53 16 view .LVU60
 239 0044 1470     		strb	r4, [r2]
 240              	.LVL22:
  53:.././simpleserial/simpleserial.c **** 		else
 241              		.loc 2 53 16 view .LVU61
 242 0046 ECE7     		b	.L13
 243              	.LVL23:
 244              	.L14:
  52:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
 245              		.loc 2 52 8 is_stmt 1 view .LVU62
  52:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
 246              		.loc 2 52 10 is_stmt 0 view .LVU63
 247 0048 A4F16106 		sub	r6, r4, #97
 248 004c 052E     		cmp	r6, #5
 249 004e 01D9     		bls	.L15
 250              	.LVL24:
 251              	.L20:
  55:.././simpleserial/simpleserial.c **** 
 252              		.loc 2 55 11 view .LVU64
 253 0050 0120     		movs	r0, #1
 254              	.LVL25:
 255              	.L10:
  55:.././simpleserial/simpleserial.c **** 
 256              		.loc 2 55 11 view .LVU65
 257              	.LBE5:
 258              	.LBE8:
  68:.././simpleserial/simpleserial.c **** }
 259              		.loc 2 68 1 view .LVU66
 260 0052 F0BD     		pop	{r4, r5, r6, r7, pc}
 261              	.LVL26:
 262              	.L15:
 263              	.LBB9:
 264              	.LBB6:
  53:.././simpleserial/simpleserial.c **** 		else
 265              		.loc 2 53 4 is_stmt 1 view .LVU67
  53:.././simpleserial/simpleserial.c **** 		else
 266              		.loc 2 53 29 is_stmt 0 view .LVU68
 267 0054 573C     		subs	r4, r4, #87
 268              	.LVL27:
  53:.././simpleserial/simpleserial.c **** 		else
 269              		.loc 2 53 29 view .LVU69
 270 0056 F5E7     		b	.L22
 271              	.LVL28:
 272              	.L17:
  59:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
 273              		.loc 2 59 8 is_stmt 1 view .LVU70
  59:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
 274              		.loc 2 59 10 is_stmt 0 view .LVU71
 275 0058 A3F14104 		sub	r4, r3, #65
 276 005c 052C     		cmp	r4, #5
 277 005e 02D8     		bhi	.L19
  60:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 278              		.loc 2 60 4 is_stmt 1 view .LVU72
  60:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 279              		.loc 2 60 31 is_stmt 0 view .LVU73
 280 0060 A3F13704 		sub	r4, r3, #55
 281 0064 E2E7     		b	.L24
 282              	.L19:
  61:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
 283              		.loc 2 61 8 is_stmt 1 view .LVU74
  61:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
 284              		.loc 2 61 10 is_stmt 0 view .LVU75
 285 0066 A3F16104 		sub	r4, r3, #97
 286 006a 052C     		cmp	r4, #5
 287 006c F0D8     		bhi	.L20
  62:.././simpleserial/simpleserial.c **** 		else
 288              		.loc 2 62 4 is_stmt 1 view .LVU76
  62:.././simpleserial/simpleserial.c **** 		else
 289              		.loc 2 62 16 is_stmt 0 view .LVU77
 290 006e 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
  62:.././simpleserial/simpleserial.c **** 		else
 291              		.loc 2 62 31 view .LVU78
 292 0070 573B     		subs	r3, r3, #87
 293              	.LVL29:
  62:.././simpleserial/simpleserial.c **** 		else
 294              		.loc 2 62 16 view .LVU79
 295 0072 44EA0313 		orr	r3, r4, r3, lsl #4
 296              	.LVL30:
  62:.././simpleserial/simpleserial.c **** 		else
 297              		.loc 2 62 16 view .LVU80
 298 0076 DCE7     		b	.L23
 299              	.LBE6:
 300              	.LBE9:
 301              		.cfi_endproc
 302              	.LFE3:
 304              		.section	.text.ss_puts,"ax",%progbits
 305              		.align	1
 306              		.global	ss_puts
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu softvfp
 312              	ss_puts:
 313              	.LVL31:
 314              	.LFB4:
  69:.././simpleserial/simpleserial.c **** 
  70:.././simpleserial/simpleserial.c **** typedef struct ss_cmd
  71:.././simpleserial/simpleserial.c **** {
  72:.././simpleserial/simpleserial.c **** 	char c;
  73:.././simpleserial/simpleserial.c **** 	unsigned int len;
  74:.././simpleserial/simpleserial.c **** 	uint8_t (*fp)(uint8_t, uint8_t, uint8_t, uint8_t *);
  75:.././simpleserial/simpleserial.c **** } ss_cmd;
  76:.././simpleserial/simpleserial.c **** static ss_cmd commands[MAX_SS_CMDS];
  77:.././simpleserial/simpleserial.c **** 
  78:.././simpleserial/simpleserial.c **** void ss_puts(char *x)
  79:.././simpleserial/simpleserial.c **** {
 315              		.loc 2 79 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		.loc 2 79 1 is_stmt 0 view .LVU82
 320 0000 10B5     		push	{r4, lr}
 321              	.LCFI1:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 4, -8
 324              		.cfi_offset 14, -4
 325 0002 0446     		mov	r4, r0
 326              	.LVL32:
 327              	.L26:
  80:.././simpleserial/simpleserial.c **** 	do {
 328              		.loc 2 80 2 is_stmt 1 discriminator 1 view .LVU83
  81:.././simpleserial/simpleserial.c **** 		putch(*x);
 329              		.loc 2 81 3 discriminator 1 view .LVU84
 330 0004 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 331 0006 FFF7FEFF 		bl	putch
 332              	.LVL33:
  82:.././simpleserial/simpleserial.c **** 	} while (*++x);
 333              		.loc 2 82 10 discriminator 1 view .LVU85
 334              		.loc 2 82 2 is_stmt 0 discriminator 1 view .LVU86
 335 000a 14F8013F 		ldrb	r3, [r4, #1]!	@ zero_extendqisi2
 336              	.LVL34:
 337              		.loc 2 82 2 discriminator 1 view .LVU87
 338 000e 002B     		cmp	r3, #0
 339 0010 F8D1     		bne	.L26
  83:.././simpleserial/simpleserial.c **** }
 340              		.loc 2 83 1 view .LVU88
 341 0012 10BD     		pop	{r4, pc}
 342              		.loc 2 83 1 view .LVU89
 343              		.cfi_endproc
 344              	.LFE4:
 346              		.section	.text.stuff_data,"ax",%progbits
 347              		.align	1
 348              		.global	stuff_data
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 352              		.fpu softvfp
 354              	stuff_data:
 355              	.LVL35:
 356              	.LFB7:
  84:.././simpleserial/simpleserial.c **** 
  85:.././simpleserial/simpleserial.c **** #define FRAME_BYTE 0x00
  86:.././simpleserial/simpleserial.c **** 
  87:.././simpleserial/simpleserial.c **** uint8_t check_version(uint8_t cmd, uint8_t scmd, uint8_t len, uint8_t *data)
  88:.././simpleserial/simpleserial.c **** {
  89:.././simpleserial/simpleserial.c **** 	uint8_t ver = SS_VER;
  90:.././simpleserial/simpleserial.c **** 	simpleserial_put('r', 1, &ver);
  91:.././simpleserial/simpleserial.c **** 	return SS_ERR_OK;
  92:.././simpleserial/simpleserial.c **** }
  93:.././simpleserial/simpleserial.c **** 
  94:.././simpleserial/simpleserial.c **** uint8_t ss_get_commands(uint8_t cmd, uint8_t scmd, uint8_t len, uint8_t *data)
  95:.././simpleserial/simpleserial.c **** {
  96:.././simpleserial/simpleserial.c ****     uint8_t cmd_chars[MAX_SS_CMDS];
  97:.././simpleserial/simpleserial.c ****     for (uint8_t i = 0; i < (num_commands & 0xFF); i++) {
  98:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
  99:.././simpleserial/simpleserial.c ****     }
 100:.././simpleserial/simpleserial.c **** 
 101:.././simpleserial/simpleserial.c ****     simpleserial_put('r', num_commands & 0xFF, (uint8_t*)cmd_chars);
 102:.././simpleserial/simpleserial.c ****     return 0x00;
 103:.././simpleserial/simpleserial.c **** 
 104:.././simpleserial/simpleserial.c **** }
 105:.././simpleserial/simpleserial.c **** 
 106:.././simpleserial/simpleserial.c **** uint8_t stuff_data(uint8_t *buf, uint8_t len)
 107:.././simpleserial/simpleserial.c **** {
 357              		.loc 2 107 1 is_stmt 1 view -0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 108:.././simpleserial/simpleserial.c **** 	uint8_t i = 1;
 361              		.loc 2 108 2 view .LVU91
 109:.././simpleserial/simpleserial.c **** 	uint8_t last = 0;
 362              		.loc 2 109 2 view .LVU92
 110:.././simpleserial/simpleserial.c **** 	for (; i < len; i++) {
 363              		.loc 2 110 2 view .LVU93
 107:.././simpleserial/simpleserial.c **** 	uint8_t i = 1;
 364              		.loc 2 107 1 is_stmt 0 view .LVU94
 365 0000 30B5     		push	{r4, r5, lr}
 366              	.LCFI2:
 367              		.cfi_def_cfa_offset 12
 368              		.cfi_offset 4, -12
 369              		.cfi_offset 5, -8
 370              		.cfi_offset 14, -4
 109:.././simpleserial/simpleserial.c **** 	uint8_t last = 0;
 371              		.loc 2 109 10 view .LVU95
 372 0002 0022     		movs	r2, #0
 373 0004 0446     		mov	r4, r0
 108:.././simpleserial/simpleserial.c **** 	uint8_t last = 0;
 374              		.loc 2 108 10 view .LVU96
 375 0006 0123     		movs	r3, #1
 376              	.LVL36:
 377              	.L29:
 378              		.loc 2 110 9 is_stmt 1 discriminator 1 view .LVU97
 379              		.loc 2 110 2 is_stmt 0 discriminator 1 view .LVU98
 380 0008 8B42     		cmp	r3, r1
 381 000a 01D3     		bcc	.L31
 111:.././simpleserial/simpleserial.c **** 		if (buf[i] == FRAME_BYTE) {
 112:.././simpleserial/simpleserial.c **** 			buf[last] = i - last;
 113:.././simpleserial/simpleserial.c **** 			last = i;
 114:.././simpleserial/simpleserial.c **** 		}
 115:.././simpleserial/simpleserial.c **** 	}
 116:.././simpleserial/simpleserial.c **** 	return 0x00;
 382              		.loc 2 116 2 is_stmt 1 view .LVU99
 117:.././simpleserial/simpleserial.c **** }
 383              		.loc 2 117 1 is_stmt 0 view .LVU100
 384 000c 0020     		movs	r0, #0
 385              	.LVL37:
 386              		.loc 2 117 1 view .LVU101
 387 000e 30BD     		pop	{r4, r5, pc}
 388              	.LVL38:
 389              	.L31:
 111:.././simpleserial/simpleserial.c **** 		if (buf[i] == FRAME_BYTE) {
 390              		.loc 2 111 3 is_stmt 1 view .LVU102
 111:.././simpleserial/simpleserial.c **** 		if (buf[i] == FRAME_BYTE) {
 391              		.loc 2 111 6 is_stmt 0 view .LVU103
 392 0010 14F8015F 		ldrb	r5, [r4, #1]!	@ zero_extendqisi2
 393 0014 15B9     		cbnz	r5, .L30
 112:.././simpleserial/simpleserial.c **** 			last = i;
 394              		.loc 2 112 4 is_stmt 1 view .LVU104
 112:.././simpleserial/simpleserial.c **** 			last = i;
 395              		.loc 2 112 18 is_stmt 0 view .LVU105
 396 0016 9D1A     		subs	r5, r3, r2
 112:.././simpleserial/simpleserial.c **** 			last = i;
 397              		.loc 2 112 14 view .LVU106
 398 0018 8554     		strb	r5, [r0, r2]
 113:.././simpleserial/simpleserial.c **** 		}
 399              		.loc 2 113 4 is_stmt 1 view .LVU107
 400              	.LVL39:
 112:.././simpleserial/simpleserial.c **** 			last = i;
 401              		.loc 2 112 14 is_stmt 0 view .LVU108
 402 001a 1A46     		mov	r2, r3
 403              	.LVL40:
 404              	.L30:
 110:.././simpleserial/simpleserial.c **** 		if (buf[i] == FRAME_BYTE) {
 405              		.loc 2 110 18 is_stmt 1 view .LVU109
 110:.././simpleserial/simpleserial.c **** 		if (buf[i] == FRAME_BYTE) {
 406              		.loc 2 110 19 is_stmt 0 view .LVU110
 407 001c 0133     		adds	r3, r3, #1
 408              	.LVL41:
 110:.././simpleserial/simpleserial.c **** 		if (buf[i] == FRAME_BYTE) {
 409              		.loc 2 110 19 view .LVU111
 410 001e DBB2     		uxtb	r3, r3
 411              	.LVL42:
 110:.././simpleserial/simpleserial.c **** 		if (buf[i] == FRAME_BYTE) {
 412              		.loc 2 110 19 view .LVU112
 413 0020 F2E7     		b	.L29
 414              		.cfi_endproc
 415              	.LFE7:
 417              		.section	.text.unstuff_data,"ax",%progbits
 418              		.align	1
 419              		.global	unstuff_data
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 423              		.fpu softvfp
 425              	unstuff_data:
 426              	.LVL43:
 427              	.LFB8:
 118:.././simpleserial/simpleserial.c **** 
 119:.././simpleserial/simpleserial.c **** uint8_t unstuff_data(uint8_t *buf, uint8_t len)
 120:.././simpleserial/simpleserial.c **** {
 428              		.loc 2 120 1 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 121:.././simpleserial/simpleserial.c **** 	uint8_t next = buf[0];
 432              		.loc 2 121 2 view .LVU114
 120:.././simpleserial/simpleserial.c **** 	uint8_t next = buf[0];
 433              		.loc 2 120 1 is_stmt 0 view .LVU115
 434 0000 10B5     		push	{r4, lr}
 435              	.LCFI3:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 4, -8
 438              		.cfi_offset 14, -4
 439              		.loc 2 121 10 view .LVU116
 440 0002 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 441              	.LVL44:
 122:.././simpleserial/simpleserial.c **** 	buf[0] = 0x00;
 442              		.loc 2 122 2 is_stmt 1 view .LVU117
 443              		.loc 2 122 9 is_stmt 0 view .LVU118
 444 0004 0024     		movs	r4, #0
 120:.././simpleserial/simpleserial.c **** 	uint8_t next = buf[0];
 445              		.loc 2 120 1 view .LVU119
 446 0006 0346     		mov	r3, r0
 447              		.loc 2 122 9 view .LVU120
 448 0008 0470     		strb	r4, [r0]
 123:.././simpleserial/simpleserial.c **** 	//len -= 1;
 124:.././simpleserial/simpleserial.c **** 	uint8_t tmp = next;
 449              		.loc 2 124 2 is_stmt 1 view .LVU121
 450              	.LVL45:
 125:.././simpleserial/simpleserial.c **** 	while ((next < len) && tmp != 0) {
 451              		.loc 2 125 2 view .LVU122
 121:.././simpleserial/simpleserial.c **** 	buf[0] = 0x00;
 452              		.loc 2 121 10 is_stmt 0 view .LVU123
 453 000a 1046     		mov	r0, r2
 454              	.LVL46:
 455              	.L33:
 456              		.loc 2 125 8 is_stmt 1 view .LVU124
 457 000c 8842     		cmp	r0, r1
 458 000e 00D2     		bcs	.L37
 459              		.loc 2 125 22 is_stmt 0 discriminator 1 view .LVU125
 460 0010 02B9     		cbnz	r2, .L35
 461              	.L37:
 126:.././simpleserial/simpleserial.c **** 		tmp = buf[next];
 127:.././simpleserial/simpleserial.c **** 		buf[next] = FRAME_BYTE;
 128:.././simpleserial/simpleserial.c **** 		next += tmp;
 129:.././simpleserial/simpleserial.c **** 	}
 130:.././simpleserial/simpleserial.c **** 	return next;
 131:.././simpleserial/simpleserial.c **** }
 462              		.loc 2 131 1 view .LVU126
 463 0012 10BD     		pop	{r4, pc}
 464              	.L35:
 126:.././simpleserial/simpleserial.c **** 		tmp = buf[next];
 465              		.loc 2 126 3 is_stmt 1 view .LVU127
 126:.././simpleserial/simpleserial.c **** 		tmp = buf[next];
 466              		.loc 2 126 7 is_stmt 0 view .LVU128
 467 0014 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
 468              	.LVL47:
 127:.././simpleserial/simpleserial.c **** 		next += tmp;
 469              		.loc 2 127 3 is_stmt 1 view .LVU129
 127:.././simpleserial/simpleserial.c **** 		next += tmp;
 470              		.loc 2 127 13 is_stmt 0 view .LVU130
 471 0016 1C54     		strb	r4, [r3, r0]
 128:.././simpleserial/simpleserial.c **** 	}
 472              		.loc 2 128 3 is_stmt 1 view .LVU131
 128:.././simpleserial/simpleserial.c **** 	}
 473              		.loc 2 128 8 is_stmt 0 view .LVU132
 474 0018 1044     		add	r0, r0, r2
 475              	.LVL48:
 128:.././simpleserial/simpleserial.c **** 	}
 476              		.loc 2 128 8 view .LVU133
 477 001a C0B2     		uxtb	r0, r0
 478              	.LVL49:
 128:.././simpleserial/simpleserial.c **** 	}
 479              		.loc 2 128 8 view .LVU134
 480 001c F6E7     		b	.L33
 481              		.cfi_endproc
 482              	.LFE8:
 484              		.section	.text.simpleserial_addcmd,"ax",%progbits
 485              		.align	1
 486              		.global	simpleserial_addcmd
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu softvfp
 492              	simpleserial_addcmd:
 493              	.LVL50:
 494              	.LFB10:
 132:.././simpleserial/simpleserial.c **** 
 133:.././simpleserial/simpleserial.c **** // Set up the SimpleSerial module by preparing internal commands
 134:.././simpleserial/simpleserial.c **** // This just adds the "v" command for now...
 135:.././simpleserial/simpleserial.c **** void simpleserial_init()
 136:.././simpleserial/simpleserial.c **** {
 137:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 138:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 139:.././simpleserial/simpleserial.c **** }
 140:.././simpleserial/simpleserial.c **** 
 141:.././simpleserial/simpleserial.c **** int simpleserial_addcmd(char c, unsigned int len, uint8_t (*fp)(uint8_t, uint8_t, uint8_t, uint8_t*
 142:.././simpleserial/simpleserial.c **** {
 495              		.loc 2 142 1 is_stmt 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 143:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS) {
 499              		.loc 2 143 2 view .LVU136
 142:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS) {
 500              		.loc 2 142 1 is_stmt 0 view .LVU137
 501 0000 38B5     		push	{r3, r4, r5, lr}
 502              	.LCFI4:
 503              		.cfi_def_cfa_offset 16
 504              		.cfi_offset 3, -16
 505              		.cfi_offset 4, -12
 506              		.cfi_offset 5, -8
 507              		.cfi_offset 14, -4
 508              		.loc 2 143 18 view .LVU138
 509 0002 0B4D     		ldr	r5, .L43
 510 0004 2B68     		ldr	r3, [r5]
 511              		.loc 2 143 4 view .LVU139
 512 0006 0F2B     		cmp	r3, #15
 513 0008 04DD     		ble	.L39
 144:.././simpleserial/simpleserial.c **** 		putch('a');
 514              		.loc 2 144 3 is_stmt 1 view .LVU140
 515 000a 6120     		movs	r0, #97
 516              	.LVL51:
 517              	.L42:
 145:.././simpleserial/simpleserial.c **** 		return 1;
 146:.././simpleserial/simpleserial.c **** 	}
 147:.././simpleserial/simpleserial.c **** 
 148:.././simpleserial/simpleserial.c **** 	if(len >= MAX_SS_LEN) {
 149:.././simpleserial/simpleserial.c **** 		putch('b');
 518              		.loc 2 149 3 is_stmt 0 view .LVU141
 519 000c FFF7FEFF 		bl	putch
 520              	.LVL52:
 150:.././simpleserial/simpleserial.c **** 		return 1;
 521              		.loc 2 150 3 is_stmt 1 view .LVU142
 522              		.loc 2 150 10 is_stmt 0 view .LVU143
 523 0010 0120     		movs	r0, #1
 524              	.L38:
 151:.././simpleserial/simpleserial.c **** 	}
 152:.././simpleserial/simpleserial.c **** 
 153:.././simpleserial/simpleserial.c **** 	commands[num_commands].c   = c;
 154:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 155:.././simpleserial/simpleserial.c **** 	commands[num_commands].fp  = fp;
 156:.././simpleserial/simpleserial.c **** 	num_commands++;
 157:.././simpleserial/simpleserial.c **** 
 158:.././simpleserial/simpleserial.c **** 	return 0;
 159:.././simpleserial/simpleserial.c **** }
 525              		.loc 2 159 1 view .LVU144
 526 0012 38BD     		pop	{r3, r4, r5, pc}
 527              	.LVL53:
 528              	.L39:
 148:.././simpleserial/simpleserial.c **** 		putch('b');
 529              		.loc 2 148 2 is_stmt 1 view .LVU145
 148:.././simpleserial/simpleserial.c **** 		putch('b');
 530              		.loc 2 148 4 is_stmt 0 view .LVU146
 531 0014 FF29     		cmp	r1, #255
 532 0016 01D9     		bls	.L41
 149:.././simpleserial/simpleserial.c **** 		return 1;
 533              		.loc 2 149 3 is_stmt 1 view .LVU147
 534 0018 6220     		movs	r0, #98
 535              	.LVL54:
 149:.././simpleserial/simpleserial.c **** 		return 1;
 536              		.loc 2 149 3 is_stmt 0 view .LVU148
 537 001a F7E7     		b	.L42
 538              	.LVL55:
 539              	.L41:
 153:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 540              		.loc 2 153 2 is_stmt 1 view .LVU149
 153:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 541              		.loc 2 153 29 is_stmt 0 view .LVU150
 542 001c 0C24     		movs	r4, #12
 543 001e 04FB0354 		mla	r4, r4, r3, r5
 156:.././simpleserial/simpleserial.c **** 
 544              		.loc 2 156 14 view .LVU151
 545 0022 0133     		adds	r3, r3, #1
 153:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 546              		.loc 2 153 29 view .LVU152
 547 0024 2071     		strb	r0, [r4, #4]
 154:.././simpleserial/simpleserial.c **** 	commands[num_commands].fp  = fp;
 548              		.loc 2 154 2 is_stmt 1 view .LVU153
 155:.././simpleserial/simpleserial.c **** 	num_commands++;
 549              		.loc 2 155 29 is_stmt 0 view .LVU154
 550 0026 C4E90212 		strd	r1, r2, [r4, #8]
 156:.././simpleserial/simpleserial.c **** 
 551              		.loc 2 156 2 is_stmt 1 view .LVU155
 156:.././simpleserial/simpleserial.c **** 
 552              		.loc 2 156 14 is_stmt 0 view .LVU156
 553 002a 2B60     		str	r3, [r5]
 158:.././simpleserial/simpleserial.c **** }
 554              		.loc 2 158 2 is_stmt 1 view .LVU157
 158:.././simpleserial/simpleserial.c **** }
 555              		.loc 2 158 9 is_stmt 0 view .LVU158
 556 002c 0020     		movs	r0, #0
 557              	.LVL56:
 158:.././simpleserial/simpleserial.c **** }
 558              		.loc 2 158 9 view .LVU159
 559 002e F0E7     		b	.L38
 560              	.L44:
 561              		.align	2
 562              	.L43:
 563 0030 00000000 		.word	.LANCHOR0
 564              		.cfi_endproc
 565              	.LFE10:
 567              		.section	.text.simpleserial_init,"ax",%progbits
 568              		.align	1
 569              		.global	simpleserial_init
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu softvfp
 575              	simpleserial_init:
 576              	.LFB9:
 136:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 577              		.loc 2 136 1 is_stmt 1 view -0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 137:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 581              		.loc 2 137 2 view .LVU161
 136:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 582              		.loc 2 136 1 is_stmt 0 view .LVU162
 583 0000 08B5     		push	{r3, lr}
 584              	.LCFI5:
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 3, -8
 587              		.cfi_offset 14, -4
 137:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 588              		.loc 2 137 2 view .LVU163
 589 0002 064A     		ldr	r2, .L46
 590 0004 0021     		movs	r1, #0
 591 0006 7620     		movs	r0, #118
 592 0008 FFF7FEFF 		bl	simpleserial_addcmd
 593              	.LVL57:
 138:.././simpleserial/simpleserial.c **** }
 594              		.loc 2 138 5 is_stmt 1 view .LVU164
 139:.././simpleserial/simpleserial.c **** 
 595              		.loc 2 139 1 is_stmt 0 view .LVU165
 596 000c BDE80840 		pop	{r3, lr}
 597              	.LCFI6:
 598              		.cfi_restore 14
 599              		.cfi_restore 3
 600              		.cfi_def_cfa_offset 0
 138:.././simpleserial/simpleserial.c **** }
 601              		.loc 2 138 5 view .LVU166
 602 0010 034A     		ldr	r2, .L46+4
 603 0012 0021     		movs	r1, #0
 604 0014 7720     		movs	r0, #119
 605 0016 FFF7FEBF 		b	simpleserial_addcmd
 606              	.LVL58:
 607              	.L47:
 608 001a 00BF     		.align	2
 609              	.L46:
 610 001c 00000000 		.word	check_version
 611 0020 00000000 		.word	ss_get_commands
 612              		.cfi_endproc
 613              	.LFE9:
 615              		.section	.text.simpleserial_put,"ax",%progbits
 616              		.align	1
 617              		.global	simpleserial_put
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 621              		.fpu softvfp
 623              	simpleserial_put:
 624              	.LVL59:
 625              	.LFB12:
 160:.././simpleserial/simpleserial.c **** 
 161:.././simpleserial/simpleserial.c **** void simpleserial_get(void)
 162:.././simpleserial/simpleserial.c **** {
 163:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 164:.././simpleserial/simpleserial.c **** 	uint8_t err = 0;
 165:.././simpleserial/simpleserial.c **** 	uint8_t next_frame;
 166:.././simpleserial/simpleserial.c ****         uint8_t crc;
 167:.././simpleserial/simpleserial.c ****         uint8_t c;
 168:.././simpleserial/simpleserial.c ****         int i;
 169:.././simpleserial/simpleserial.c **** 
 170:.././simpleserial/simpleserial.c **** 	for (int i = 0; i < 4; i++) {
 171:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch(); //PTR, cmd, scmd, len
 172:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 173:.././simpleserial/simpleserial.c **** 			err = SS_ERR_FRAME_BYTE;
 174:.././simpleserial/simpleserial.c **** 			goto ERROR;
 175:.././simpleserial/simpleserial.c **** 		}
 176:.././simpleserial/simpleserial.c **** 	}
 177:.././simpleserial/simpleserial.c **** 	next_frame = unstuff_data(data_buf, 4);
 178:.././simpleserial/simpleserial.c **** 
 179:.././simpleserial/simpleserial.c **** 	// check for valid command
 180:.././simpleserial/simpleserial.c **** 	c = 0;
 181:.././simpleserial/simpleserial.c **** 	for(c = 0; c < num_commands; c++)
 182:.././simpleserial/simpleserial.c **** 	{
 183:.././simpleserial/simpleserial.c **** 		if(commands[c].c == data_buf[1])
 184:.././simpleserial/simpleserial.c **** 			break;
 185:.././simpleserial/simpleserial.c **** 	}
 186:.././simpleserial/simpleserial.c **** 
 187:.././simpleserial/simpleserial.c **** 	if (c == num_commands) {
 188:.././simpleserial/simpleserial.c **** 		err = SS_ERR_CMD;
 189:.././simpleserial/simpleserial.c **** 		goto ERROR;
 190:.././simpleserial/simpleserial.c **** 	}
 191:.././simpleserial/simpleserial.c **** 
 192:.././simpleserial/simpleserial.c **** 	//check that next frame not beyond end of message
 193:.././simpleserial/simpleserial.c **** 	// account for cmd, scmd, len, data, crc, end of frame
 194:.././simpleserial/simpleserial.c **** 	if ((data_buf[3] + 5) < next_frame) {
 195:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 196:.././simpleserial/simpleserial.c **** 		goto ERROR;
 197:.././simpleserial/simpleserial.c **** 	}
 198:.././simpleserial/simpleserial.c **** 
 199:.././simpleserial/simpleserial.c **** 	// read in data
 200:.././simpleserial/simpleserial.c **** 	// eq to len + crc + frame end
 201:.././simpleserial/simpleserial.c **** 	i = 4;
 202:.././simpleserial/simpleserial.c **** 	for (; i < data_buf[3] + 5; i++) {
 203:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch();
 204:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 205:.././simpleserial/simpleserial.c **** 			err = SS_ERR_FRAME_BYTE;
 206:.././simpleserial/simpleserial.c **** 			goto ERROR;
 207:.././simpleserial/simpleserial.c **** 		}
 208:.././simpleserial/simpleserial.c **** 	}
 209:.././simpleserial/simpleserial.c **** 
 210:.././simpleserial/simpleserial.c **** 	//check that final byte is the FRAME_BYTE
 211:.././simpleserial/simpleserial.c **** 	data_buf[i] = getch();
 212:.././simpleserial/simpleserial.c **** 	if (data_buf[i] != FRAME_BYTE) {
 213:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 214:.././simpleserial/simpleserial.c **** 		goto ERROR;
 215:.././simpleserial/simpleserial.c **** 	}
 216:.././simpleserial/simpleserial.c **** 
 217:.././simpleserial/simpleserial.c **** 	//fully unstuff data now
 218:.././simpleserial/simpleserial.c **** 	unstuff_data(data_buf + next_frame, i - next_frame + 1);
 219:.././simpleserial/simpleserial.c **** 
 220:.././simpleserial/simpleserial.c **** 	//calc crc excluding original frame offset and frame end and crc
 221:.././simpleserial/simpleserial.c **** 	crc = ss_crc(data_buf+1, i-2);
 222:.././simpleserial/simpleserial.c **** 	if (crc != data_buf[i-1]) {
 223:.././simpleserial/simpleserial.c **** 		err = SS_ERR_CRC;
 224:.././simpleserial/simpleserial.c **** 		goto ERROR;
 225:.././simpleserial/simpleserial.c **** 	}
 226:.././simpleserial/simpleserial.c **** 
 227:.././simpleserial/simpleserial.c **** 	err = commands[c].fp(data_buf[1], data_buf[2], data_buf[3], data_buf+4);
 228:.././simpleserial/simpleserial.c **** 
 229:.././simpleserial/simpleserial.c **** ERROR:
 230:.././simpleserial/simpleserial.c **** 	simpleserial_put('e', 0x01, &err);
 231:.././simpleserial/simpleserial.c **** 	return;
 232:.././simpleserial/simpleserial.c **** }
 233:.././simpleserial/simpleserial.c **** 
 234:.././simpleserial/simpleserial.c **** void simpleserial_put(char c, uint8_t size, uint8_t* output)
 235:.././simpleserial/simpleserial.c **** {
 626              		.loc 2 235 1 is_stmt 1 view -0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 256
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 236:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 630              		.loc 2 236 2 view .LVU168
 237:.././simpleserial/simpleserial.c **** 	data_buf[0] = 0x00;
 631              		.loc 2 237 2 view .LVU169
 235:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 632              		.loc 2 235 1 is_stmt 0 view .LVU170
 633 0000 70B5     		push	{r4, r5, r6, lr}
 634              	.LCFI7:
 635              		.cfi_def_cfa_offset 16
 636              		.cfi_offset 4, -16
 637              		.cfi_offset 5, -12
 638              		.cfi_offset 6, -8
 639              		.cfi_offset 14, -4
 640 0002 C0B0     		sub	sp, sp, #256
 641              	.LCFI8:
 642              		.cfi_def_cfa_offset 272
 235:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 643              		.loc 2 235 1 view .LVU171
 644 0004 0C46     		mov	r4, r1
 645              		.loc 2 237 14 view .LVU172
 646 0006 0025     		movs	r5, #0
 235:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 647              		.loc 2 235 1 view .LVU173
 648 0008 1146     		mov	r1, r2
 649              	.LVL60:
 238:.././simpleserial/simpleserial.c **** 	data_buf[1] = c;
 650              		.loc 2 238 14 view .LVU174
 651 000a 8DF80100 		strb	r0, [sp, #1]
 239:.././simpleserial/simpleserial.c **** 	data_buf[2] = size;
 240:.././simpleserial/simpleserial.c **** 	int i = 0;
 241:.././simpleserial/simpleserial.c **** 	for (; i < size; i++) {
 242:.././simpleserial/simpleserial.c **** 		data_buf[i + 3] = output[i];
 652              		.loc 2 242 19 view .LVU175
 653 000e 2246     		mov	r2, r4
 654              	.LVL61:
 655              		.loc 2 242 19 view .LVU176
 656 0010 0DF10300 		add	r0, sp, #3
 657              	.LVL62:
 239:.././simpleserial/simpleserial.c **** 	data_buf[2] = size;
 658              		.loc 2 239 14 view .LVU177
 659 0014 8DF80240 		strb	r4, [sp, #2]
 237:.././simpleserial/simpleserial.c **** 	data_buf[1] = c;
 660              		.loc 2 237 14 view .LVU178
 661 0018 8DF80050 		strb	r5, [sp]
 238:.././simpleserial/simpleserial.c **** 	data_buf[1] = c;
 662              		.loc 2 238 2 is_stmt 1 view .LVU179
 239:.././simpleserial/simpleserial.c **** 	data_buf[2] = size;
 663              		.loc 2 239 2 view .LVU180
 240:.././simpleserial/simpleserial.c **** 	for (; i < size; i++) {
 664              		.loc 2 240 2 view .LVU181
 665              	.LVL63:
 241:.././simpleserial/simpleserial.c **** 		data_buf[i + 3] = output[i];
 666              		.loc 2 241 2 view .LVU182
 667              		.loc 2 242 19 is_stmt 0 view .LVU183
 668 001c FFF7FEFF 		bl	memcpy
 669              	.LVL64:
 243:.././simpleserial/simpleserial.c **** 	}
 244:.././simpleserial/simpleserial.c **** 	data_buf[i + 3] = ss_crc(data_buf+1, size+2);
 670              		.loc 2 244 2 is_stmt 1 view .LVU184
 671              		.loc 2 244 20 is_stmt 0 view .LVU185
 672 0020 A11C     		adds	r1, r4, #2
 673 0022 C9B2     		uxtb	r1, r1
 674 0024 0DF10100 		add	r0, sp, #1
 675 0028 FFF7FEFF 		bl	ss_crc
 676              	.LVL65:
 677              		.loc 2 244 18 view .LVU186
 678 002c 0DEB0403 		add	r3, sp, r4
 245:.././simpleserial/simpleserial.c **** 	data_buf[i + 4] = 0x00;
 679              		.loc 2 245 13 view .LVU187
 680 0030 261D     		adds	r6, r4, #4
 246:.././simpleserial/simpleserial.c **** 	stuff_data(data_buf, i + 5);
 681              		.loc 2 246 2 view .LVU188
 682 0032 611D     		adds	r1, r4, #5
 244:.././simpleserial/simpleserial.c **** 	data_buf[i + 4] = 0x00;
 683              		.loc 2 244 18 view .LVU189
 684 0034 D870     		strb	r0, [r3, #3]
 245:.././simpleserial/simpleserial.c **** 	data_buf[i + 4] = 0x00;
 685              		.loc 2 245 2 is_stmt 1 view .LVU190
 686              		.loc 2 246 2 is_stmt 0 view .LVU191
 687 0036 C9B2     		uxtb	r1, r1
 688 0038 6846     		mov	r0, sp
 245:.././simpleserial/simpleserial.c **** 	data_buf[i + 4] = 0x00;
 689              		.loc 2 245 18 view .LVU192
 690 003a 0DF80650 		strb	r5, [sp, r6]
 691              		.loc 2 246 2 is_stmt 1 view .LVU193
 692 003e FFF7FEFF 		bl	stuff_data
 693              	.LVL66:
 247:.././simpleserial/simpleserial.c **** 	for (int i = 0; i < size + 5; i++) {
 694              		.loc 2 247 2 view .LVU194
 695              	.LBB10:
 696              		.loc 2 247 7 view .LVU195
 697              		.loc 2 247 18 view .LVU196
 698 0042 6C46     		mov	r4, sp
 699              	.LVL67:
 700              	.L49:
 248:.././simpleserial/simpleserial.c **** 		putch(data_buf[i]);
 701              		.loc 2 248 3 discriminator 3 view .LVU197
 702 0044 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 247:.././simpleserial/simpleserial.c **** 	for (int i = 0; i < size + 5; i++) {
 703              		.loc 2 247 33 is_stmt 0 discriminator 3 view .LVU198
 704 0048 0135     		adds	r5, r5, #1
 705              	.LVL68:
 706              		.loc 2 248 3 discriminator 3 view .LVU199
 707 004a FFF7FEFF 		bl	putch
 708              	.LVL69:
 247:.././simpleserial/simpleserial.c **** 	for (int i = 0; i < size + 5; i++) {
 709              		.loc 2 247 32 is_stmt 1 discriminator 3 view .LVU200
 247:.././simpleserial/simpleserial.c **** 	for (int i = 0; i < size + 5; i++) {
 710              		.loc 2 247 18 discriminator 3 view .LVU201
 247:.././simpleserial/simpleserial.c **** 	for (int i = 0; i < size + 5; i++) {
 711              		.loc 2 247 2 is_stmt 0 discriminator 3 view .LVU202
 712 004e AE42     		cmp	r6, r5
 713 0050 F8DA     		bge	.L49
 714              	.LBE10:
 249:.././simpleserial/simpleserial.c **** 	}
 250:.././simpleserial/simpleserial.c **** }
 715              		.loc 2 250 1 view .LVU203
 716 0052 40B0     		add	sp, sp, #256
 717              	.LCFI9:
 718              		.cfi_def_cfa_offset 16
 719              		@ sp needed
 720 0054 70BD     		pop	{r4, r5, r6, pc}
 721              		.loc 2 250 1 view .LVU204
 722              		.cfi_endproc
 723              	.LFE12:
 725              		.section	.text.check_version,"ax",%progbits
 726              		.align	1
 727              		.global	check_version
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 731              		.fpu softvfp
 733              	check_version:
 734              	.LVL70:
 735              	.LFB5:
  88:.././simpleserial/simpleserial.c **** 	uint8_t ver = SS_VER;
 736              		.loc 2 88 1 is_stmt 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 8
 739              		@ frame_needed = 0, uses_anonymous_args = 0
  89:.././simpleserial/simpleserial.c **** 	simpleserial_put('r', 1, &ver);
 740              		.loc 2 89 2 view .LVU206
  88:.././simpleserial/simpleserial.c **** 	uint8_t ver = SS_VER;
 741              		.loc 2 88 1 is_stmt 0 view .LVU207
 742 0000 07B5     		push	{r0, r1, r2, lr}
 743              	.LCFI10:
 744              		.cfi_def_cfa_offset 16
 745              		.cfi_offset 14, -4
  89:.././simpleserial/simpleserial.c **** 	simpleserial_put('r', 1, &ver);
 746              		.loc 2 89 10 view .LVU208
 747 0002 0323     		movs	r3, #3
 748              	.LVL71:
  90:.././simpleserial/simpleserial.c **** 	return SS_ERR_OK;
 749              		.loc 2 90 2 view .LVU209
 750 0004 0DF10702 		add	r2, sp, #7
 751              	.LVL72:
  90:.././simpleserial/simpleserial.c **** 	return SS_ERR_OK;
 752              		.loc 2 90 2 view .LVU210
 753 0008 0121     		movs	r1, #1
 754              	.LVL73:
  90:.././simpleserial/simpleserial.c **** 	return SS_ERR_OK;
 755              		.loc 2 90 2 view .LVU211
 756 000a 7220     		movs	r0, #114
 757              	.LVL74:
  89:.././simpleserial/simpleserial.c **** 	simpleserial_put('r', 1, &ver);
 758              		.loc 2 89 10 view .LVU212
 759 000c 8DF80730 		strb	r3, [sp, #7]
  90:.././simpleserial/simpleserial.c **** 	return SS_ERR_OK;
 760              		.loc 2 90 2 is_stmt 1 view .LVU213
 761 0010 FFF7FEFF 		bl	simpleserial_put
 762              	.LVL75:
  91:.././simpleserial/simpleserial.c **** }
 763              		.loc 2 91 2 view .LVU214
  92:.././simpleserial/simpleserial.c **** 
 764              		.loc 2 92 1 is_stmt 0 view .LVU215
 765 0014 0020     		movs	r0, #0
 766 0016 03B0     		add	sp, sp, #12
 767              	.LCFI11:
 768              		.cfi_def_cfa_offset 4
 769              		@ sp needed
 770 0018 5DF804FB 		ldr	pc, [sp], #4
 771              		.cfi_endproc
 772              	.LFE5:
 774              		.section	.text.ss_get_commands,"ax",%progbits
 775              		.align	1
 776              		.global	ss_get_commands
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 780              		.fpu softvfp
 782              	ss_get_commands:
 783              	.LVL76:
 784              	.LFB6:
  95:.././simpleserial/simpleserial.c ****     uint8_t cmd_chars[MAX_SS_CMDS];
 785              		.loc 2 95 1 is_stmt 1 view -0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 16
 788              		@ frame_needed = 0, uses_anonymous_args = 0
  96:.././simpleserial/simpleserial.c ****     for (uint8_t i = 0; i < (num_commands & 0xFF); i++) {
 789              		.loc 2 96 5 view .LVU217
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 790              		.loc 2 97 5 view .LVU218
 791              	.LBB11:
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 792              		.loc 2 97 10 view .LVU219
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 793              		.loc 2 97 10 is_stmt 0 view .LVU220
 794              	.LBE11:
  95:.././simpleserial/simpleserial.c ****     uint8_t cmd_chars[MAX_SS_CMDS];
 795              		.loc 2 95 1 view .LVU221
 796 0000 30B5     		push	{r4, r5, lr}
 797              	.LCFI12:
 798              		.cfi_def_cfa_offset 12
 799              		.cfi_offset 4, -12
 800              		.cfi_offset 5, -8
 801              		.cfi_offset 14, -4
 802              	.LBB12:
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 803              		.loc 2 97 43 view .LVU222
 804 0002 0D48     		ldr	r0, .L55
 805              	.LVL77:
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 806              		.loc 2 97 43 view .LVU223
 807 0004 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 808              	.LVL78:
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 809              		.loc 2 97 43 view .LVU224
 810              	.LBE12:
  95:.././simpleserial/simpleserial.c ****     uint8_t cmd_chars[MAX_SS_CMDS];
 811              		.loc 2 95 1 view .LVU225
 812 0006 85B0     		sub	sp, sp, #20
 813              	.LCFI13:
 814              		.cfi_def_cfa_offset 32
 815              	.LBB13:
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 816              		.loc 2 97 5 view .LVU226
 817 0008 0022     		movs	r2, #0
 818              	.LVL79:
  98:.././simpleserial/simpleserial.c ****     }
 819              		.loc 2 98 35 view .LVU227
 820 000a 0C24     		movs	r4, #12
 821              	.LVL80:
 822              	.L53:
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 823              		.loc 2 97 25 is_stmt 1 discriminator 1 view .LVU228
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 824              		.loc 2 97 27 is_stmt 0 discriminator 1 view .LVU229
 825 000c D3B2     		uxtb	r3, r2
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 826              		.loc 2 97 5 discriminator 1 view .LVU230
 827 000e 8B42     		cmp	r3, r1
 828 0010 02F10102 		add	r2, r2, #1
 829              	.LVL81:
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 830              		.loc 2 97 5 discriminator 1 view .LVU231
 831 0014 06DB     		blt	.L54
 832              	.LBE13:
 101:.././simpleserial/simpleserial.c ****     return 0x00;
 833              		.loc 2 101 5 is_stmt 1 view .LVU232
 834 0016 6A46     		mov	r2, sp
 835 0018 7220     		movs	r0, #114
 836 001a FFF7FEFF 		bl	simpleserial_put
 837              	.LVL82:
 102:.././simpleserial/simpleserial.c **** 
 838              		.loc 2 102 5 view .LVU233
 104:.././simpleserial/simpleserial.c **** 
 839              		.loc 2 104 1 is_stmt 0 view .LVU234
 840 001e 0020     		movs	r0, #0
 841 0020 05B0     		add	sp, sp, #20
 842              	.LCFI14:
 843              		.cfi_remember_state
 844              		.cfi_def_cfa_offset 12
 845              		@ sp needed
 846 0022 30BD     		pop	{r4, r5, pc}
 847              	.LVL83:
 848              	.L54:
 849              	.LCFI15:
 850              		.cfi_restore_state
 851              	.LBB14:
  98:.././simpleserial/simpleserial.c ****     }
 852              		.loc 2 98 9 is_stmt 1 discriminator 3 view .LVU235
  98:.././simpleserial/simpleserial.c ****     }
 853              		.loc 2 98 22 is_stmt 0 discriminator 3 view .LVU236
 854 0024 03F11005 		add	r5, r3, #16
  98:.././simpleserial/simpleserial.c ****     }
 855              		.loc 2 98 35 discriminator 3 view .LVU237
 856 0028 04FB0303 		mla	r3, r4, r3, r0
 857              	.LVL84:
  98:.././simpleserial/simpleserial.c ****     }
 858              		.loc 2 98 22 discriminator 3 view .LVU238
 859 002c 6D44     		add	r5, sp, r5
 860              	.LVL85:
  98:.././simpleserial/simpleserial.c ****     }
 861              		.loc 2 98 22 discriminator 3 view .LVU239
 862 002e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 863 0030 05F8103C 		strb	r3, [r5, #-16]
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 864              		.loc 2 97 52 is_stmt 1 discriminator 3 view .LVU240
 865              	.LVL86:
  97:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 866              		.loc 2 97 52 is_stmt 0 discriminator 3 view .LVU241
 867 0034 EAE7     		b	.L53
 868              	.L56:
 869 0036 00BF     		.align	2
 870              	.L55:
 871 0038 00000000 		.word	.LANCHOR0
 872              	.LBE14:
 873              		.cfi_endproc
 874              	.LFE6:
 876              		.section	.text.simpleserial_get,"ax",%progbits
 877              		.align	1
 878              		.global	simpleserial_get
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 882              		.fpu softvfp
 884              	simpleserial_get:
 885              	.LFB11:
 162:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 886              		.loc 2 162 1 is_stmt 1 view -0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 264
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 163:.././simpleserial/simpleserial.c **** 	uint8_t err = 0;
 890              		.loc 2 163 2 view .LVU243
 164:.././simpleserial/simpleserial.c **** 	uint8_t next_frame;
 891              		.loc 2 164 2 view .LVU244
 162:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 892              		.loc 2 162 1 is_stmt 0 view .LVU245
 893 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 894              	.LCFI16:
 895              		.cfi_def_cfa_offset 32
 896              		.cfi_offset 4, -32
 897              		.cfi_offset 5, -28
 898              		.cfi_offset 6, -24
 899              		.cfi_offset 7, -20
 900              		.cfi_offset 8, -16
 901              		.cfi_offset 9, -12
 902              		.cfi_offset 10, -8
 903              		.cfi_offset 14, -4
 904 0004 C2B0     		sub	sp, sp, #264
 905              	.LCFI17:
 906              		.cfi_def_cfa_offset 296
 164:.././simpleserial/simpleserial.c **** 	uint8_t next_frame;
 907              		.loc 2 164 10 view .LVU246
 908 0006 0025     		movs	r5, #0
 909 0008 02AE     		add	r6, sp, #8
 910 000a 8DF80750 		strb	r5, [sp, #7]
 165:.././simpleserial/simpleserial.c ****         uint8_t crc;
 911              		.loc 2 165 2 is_stmt 1 view .LVU247
 166:.././simpleserial/simpleserial.c ****         uint8_t c;
 912              		.loc 2 166 9 view .LVU248
 167:.././simpleserial/simpleserial.c ****         int i;
 913              		.loc 2 167 9 view .LVU249
 168:.././simpleserial/simpleserial.c **** 
 914              		.loc 2 168 9 view .LVU250
 170:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch(); //PTR, cmd, scmd, len
 915              		.loc 2 170 2 view .LVU251
 916              	.LBB15:
 170:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch(); //PTR, cmd, scmd, len
 917              		.loc 2 170 7 view .LVU252
 918              	.LVL87:
 170:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch(); //PTR, cmd, scmd, len
 919              		.loc 2 170 18 view .LVU253
 920 000e 3446     		mov	r4, r6
 921              	.LVL88:
 922              	.L60:
 171:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 923              		.loc 2 171 3 view .LVU254
 171:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 924              		.loc 2 171 17 is_stmt 0 view .LVU255
 925 0010 FFF7FEFF 		bl	getch
 926              	.LVL89:
 171:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 927              		.loc 2 171 15 view .LVU256
 928 0014 06F8010B 		strb	r0, [r6], #1
 172:.././simpleserial/simpleserial.c **** 			err = SS_ERR_FRAME_BYTE;
 929              		.loc 2 172 3 is_stmt 1 view .LVU257
 172:.././simpleserial/simpleserial.c **** 			err = SS_ERR_FRAME_BYTE;
 930              		.loc 2 172 6 is_stmt 0 view .LVU258
 931 0018 58B9     		cbnz	r0, .L58
 932              	.LVL90:
 933              	.L65:
 173:.././simpleserial/simpleserial.c **** 			goto ERROR;
 934              		.loc 2 173 4 is_stmt 1 view .LVU259
 173:.././simpleserial/simpleserial.c **** 			goto ERROR;
 935              		.loc 2 173 8 is_stmt 0 view .LVU260
 936 001a 0523     		movs	r3, #5
 937              	.L74:
 938              	.LBE15:
 223:.././simpleserial/simpleserial.c **** 		goto ERROR;
 939              		.loc 2 223 7 view .LVU261
 940 001c 8DF80730 		strb	r3, [sp, #7]
 224:.././simpleserial/simpleserial.c **** 	}
 941              		.loc 2 224 3 is_stmt 1 view .LVU262
 942              	.L59:
 230:.././simpleserial/simpleserial.c **** 	return;
 943              		.loc 2 230 2 view .LVU263
 944 0020 0DF10702 		add	r2, sp, #7
 945 0024 0121     		movs	r1, #1
 946 0026 6520     		movs	r0, #101
 947 0028 FFF7FEFF 		bl	simpleserial_put
 948              	.LVL91:
 231:.././simpleserial/simpleserial.c **** }
 949              		.loc 2 231 2 view .LVU264
 232:.././simpleserial/simpleserial.c **** 
 950              		.loc 2 232 1 is_stmt 0 view .LVU265
 951 002c 42B0     		add	sp, sp, #264
 952              	.LCFI18:
 953              		.cfi_remember_state
 954              		.cfi_def_cfa_offset 32
 955              		@ sp needed
 956 002e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 957              	.LVL92:
 958              	.L58:
 959              	.LCFI19:
 960              		.cfi_restore_state
 961              	.LBB16:
 170:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch(); //PTR, cmd, scmd, len
 962              		.loc 2 170 25 is_stmt 1 discriminator 2 view .LVU266
 170:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch(); //PTR, cmd, scmd, len
 963              		.loc 2 170 26 is_stmt 0 discriminator 2 view .LVU267
 964 0032 0135     		adds	r5, r5, #1
 965              	.LVL93:
 170:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch(); //PTR, cmd, scmd, len
 966              		.loc 2 170 18 is_stmt 1 discriminator 2 view .LVU268
 170:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch(); //PTR, cmd, scmd, len
 967              		.loc 2 170 2 is_stmt 0 discriminator 2 view .LVU269
 968 0034 042D     		cmp	r5, #4
 969 0036 EBD1     		bne	.L60
 970              	.LBE16:
 177:.././simpleserial/simpleserial.c **** 
 971              		.loc 2 177 2 is_stmt 1 view .LVU270
 177:.././simpleserial/simpleserial.c **** 
 972              		.loc 2 177 15 is_stmt 0 view .LVU271
 973 0038 2946     		mov	r1, r5
 974 003a 2046     		mov	r0, r4
 975 003c FFF7FEFF 		bl	unstuff_data
 976              	.LVL94:
 181:.././simpleserial/simpleserial.c **** 	{
 977              		.loc 2 181 15 view .LVU272
 978 0040 254F     		ldr	r7, .L75
 183:.././simpleserial/simpleserial.c **** 			break;
 979              		.loc 2 183 31 view .LVU273
 980 0042 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 181:.././simpleserial/simpleserial.c **** 	{
 981              		.loc 2 181 15 view .LVU274
 982 0044 3A68     		ldr	r2, [r7]
 177:.././simpleserial/simpleserial.c **** 
 983              		.loc 2 177 15 view .LVU275
 984 0046 8046     		mov	r8, r0
 985              	.LVL95:
 180:.././simpleserial/simpleserial.c **** 	for(c = 0; c < num_commands; c++)
 986              		.loc 2 180 2 is_stmt 1 view .LVU276
 181:.././simpleserial/simpleserial.c **** 	{
 987              		.loc 2 181 2 view .LVU277
 181:.././simpleserial/simpleserial.c **** 	{
 988              		.loc 2 181 2 is_stmt 0 view .LVU278
 989 0048 0023     		movs	r3, #0
 183:.././simpleserial/simpleserial.c **** 			break;
 990              		.loc 2 183 17 view .LVU279
 991 004a 0C20     		movs	r0, #12
 992              	.LVL96:
 993              	.L61:
 181:.././simpleserial/simpleserial.c **** 	{
 994              		.loc 2 181 13 is_stmt 1 discriminator 1 view .LVU280
 181:.././simpleserial/simpleserial.c **** 	{
 995              		.loc 2 181 15 is_stmt 0 discriminator 1 view .LVU281
 996 004c 5FFA83F9 		uxtb	r9, r3
 181:.././simpleserial/simpleserial.c **** 	{
 997              		.loc 2 181 2 discriminator 1 view .LVU282
 998 0050 9145     		cmp	r9, r2
 999 0052 02DB     		blt	.L63
 187:.././simpleserial/simpleserial.c **** 		err = SS_ERR_CMD;
 1000              		.loc 2 187 2 is_stmt 1 view .LVU283
 187:.././simpleserial/simpleserial.c **** 		err = SS_ERR_CMD;
 1001              		.loc 2 187 5 is_stmt 0 view .LVU284
 1002 0054 07D1     		bne	.L62
 188:.././simpleserial/simpleserial.c **** 		goto ERROR;
 1003              		.loc 2 188 3 is_stmt 1 view .LVU285
 188:.././simpleserial/simpleserial.c **** 		goto ERROR;
 1004              		.loc 2 188 7 is_stmt 0 view .LVU286
 1005 0056 0123     		movs	r3, #1
 1006              	.LVL97:
 188:.././simpleserial/simpleserial.c **** 		goto ERROR;
 1007              		.loc 2 188 7 view .LVU287
 1008 0058 E0E7     		b	.L74
 1009              	.LVL98:
 1010              	.L63:
 183:.././simpleserial/simpleserial.c **** 			break;
 1011              		.loc 2 183 3 is_stmt 1 view .LVU288
 183:.././simpleserial/simpleserial.c **** 			break;
 1012              		.loc 2 183 17 is_stmt 0 view .LVU289
 1013 005a 00FB0976 		mla	r6, r0, r9, r7
 183:.././simpleserial/simpleserial.c **** 			break;
 1014              		.loc 2 183 5 view .LVU290
 1015 005e 0133     		adds	r3, r3, #1
 1016              	.LVL99:
 183:.././simpleserial/simpleserial.c **** 			break;
 1017              		.loc 2 183 5 view .LVU291
 1018 0060 3679     		ldrb	r6, [r6, #4]	@ zero_extendqisi2
 1019 0062 8E42     		cmp	r6, r1
 1020 0064 F2D1     		bne	.L61
 1021              	.L62:
 194:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 1022              		.loc 2 194 2 is_stmt 1 view .LVU292
 194:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 1023              		.loc 2 194 15 is_stmt 0 view .LVU293
 1024 0066 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 194:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 1025              		.loc 2 194 19 view .LVU294
 1026 0068 0533     		adds	r3, r3, #5
 194:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 1027              		.loc 2 194 5 view .LVU295
 1028 006a 4345     		cmp	r3, r8
 1029 006c 02DA     		bge	.L64
 1030              	.LVL100:
 1031              	.L66:
 195:.././simpleserial/simpleserial.c **** 		goto ERROR;
 1032              		.loc 2 195 3 is_stmt 1 view .LVU296
 195:.././simpleserial/simpleserial.c **** 		goto ERROR;
 1033              		.loc 2 195 7 is_stmt 0 view .LVU297
 1034 006e 0423     		movs	r3, #4
 1035 0070 D4E7     		b	.L74
 1036              	.LVL101:
 1037              	.L68:
 195:.././simpleserial/simpleserial.c **** 		goto ERROR;
 1038              		.loc 2 195 7 view .LVU298
 1039 0072 3546     		mov	r5, r6
 1040              	.LVL102:
 1041              	.L64:
 203:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 1042              		.loc 2 203 3 is_stmt 1 view .LVU299
 203:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 1043              		.loc 2 203 17 is_stmt 0 view .LVU300
 1044 0074 FFF7FEFF 		bl	getch
 1045              	.LVL103:
 203:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 1046              		.loc 2 203 15 view .LVU301
 1047 0078 6055     		strb	r0, [r4, r5]
 204:.././simpleserial/simpleserial.c **** 			err = SS_ERR_FRAME_BYTE;
 1048              		.loc 2 204 3 is_stmt 1 view .LVU302
 204:.././simpleserial/simpleserial.c **** 			err = SS_ERR_FRAME_BYTE;
 1049              		.loc 2 204 6 is_stmt 0 view .LVU303
 1050 007a 0028     		cmp	r0, #0
 1051 007c CDD0     		beq	.L65
 202:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch();
 1052              		.loc 2 202 30 is_stmt 1 view .LVU304
 202:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch();
 1053              		.loc 2 202 21 is_stmt 0 view .LVU305
 1054 007e E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 202:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch();
 1055              		.loc 2 202 31 view .LVU306
 1056 0080 6E1C     		adds	r6, r5, #1
 1057              	.LVL104:
 202:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch();
 1058              		.loc 2 202 9 is_stmt 1 view .LVU307
 202:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch();
 1059              		.loc 2 202 11 is_stmt 0 view .LVU308
 1060 0082 0433     		adds	r3, r3, #4
 202:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch();
 1061              		.loc 2 202 2 view .LVU309
 1062 0084 B342     		cmp	r3, r6
 1063 0086 F4DA     		bge	.L68
 211:.././simpleserial/simpleserial.c **** 	if (data_buf[i] != FRAME_BYTE) {
 1064              		.loc 2 211 2 is_stmt 1 view .LVU310
 211:.././simpleserial/simpleserial.c **** 	if (data_buf[i] != FRAME_BYTE) {
 1065              		.loc 2 211 16 is_stmt 0 view .LVU311
 1066 0088 FFF7FEFF 		bl	getch
 1067              	.LVL105:
 211:.././simpleserial/simpleserial.c **** 	if (data_buf[i] != FRAME_BYTE) {
 1068              		.loc 2 211 14 view .LVU312
 1069 008c A055     		strb	r0, [r4, r6]
 212:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 1070              		.loc 2 212 2 is_stmt 1 view .LVU313
 212:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 1071              		.loc 2 212 5 is_stmt 0 view .LVU314
 1072 008e 0028     		cmp	r0, #0
 1073 0090 EDD1     		bne	.L66
 218:.././simpleserial/simpleserial.c **** 
 1074              		.loc 2 218 2 is_stmt 1 view .LVU315
 1075 0092 C8F10101 		rsb	r1, r8, #1
 1076 0096 51FA86F1 		uxtab	r1, r1, r6
 1077 009a C9B2     		uxtb	r1, r1
 218:.././simpleserial/simpleserial.c **** 
 1078              		.loc 2 218 40 is_stmt 0 view .LVU316
 1079 009c 5FFA86FA 		uxtb	r10, r6
 218:.././simpleserial/simpleserial.c **** 
 1080              		.loc 2 218 2 view .LVU317
 1081 00a0 04EB0800 		add	r0, r4, r8
 1082 00a4 FFF7FEFF 		bl	unstuff_data
 1083              	.LVL106:
 221:.././simpleserial/simpleserial.c **** 	if (crc != data_buf[i-1]) {
 1084              		.loc 2 221 2 is_stmt 1 view .LVU318
 221:.././simpleserial/simpleserial.c **** 	if (crc != data_buf[i-1]) {
 1085              		.loc 2 221 8 is_stmt 0 view .LVU319
 1086 00a8 AAF10201 		sub	r1, r10, #2
 1087 00ac C9B2     		uxtb	r1, r1
 1088 00ae 0DF10900 		add	r0, sp, #9
 1089 00b2 FFF7FEFF 		bl	ss_crc
 1090              	.LVL107:
 222:.././simpleserial/simpleserial.c **** 		err = SS_ERR_CRC;
 1091              		.loc 2 222 2 is_stmt 1 view .LVU320
 222:.././simpleserial/simpleserial.c **** 		err = SS_ERR_CRC;
 1092              		.loc 2 222 5 is_stmt 0 view .LVU321
 1093 00b6 635D     		ldrb	r3, [r4, r5]	@ zero_extendqisi2
 1094 00b8 8342     		cmp	r3, r0
 1095 00ba 01D0     		beq	.L67
 223:.././simpleserial/simpleserial.c **** 		goto ERROR;
 1096              		.loc 2 223 3 is_stmt 1 view .LVU322
 223:.././simpleserial/simpleserial.c **** 		goto ERROR;
 1097              		.loc 2 223 7 is_stmt 0 view .LVU323
 1098 00bc 0223     		movs	r3, #2
 1099 00be ADE7     		b	.L74
 1100              	.L67:
 227:.././simpleserial/simpleserial.c **** 
 1101              		.loc 2 227 2 is_stmt 1 view .LVU324
 227:.././simpleserial/simpleserial.c **** 
 1102              		.loc 2 227 19 is_stmt 0 view .LVU325
 1103 00c0 0C23     		movs	r3, #12
 1104 00c2 03FB0977 		mla	r7, r3, r9, r7
 227:.././simpleserial/simpleserial.c **** 
 1105              		.loc 2 227 8 view .LVU326
 1106 00c6 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 1107 00c8 FD68     		ldr	r5, [r7, #12]
 1108 00ca A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 1109 00cc 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1110              	.LVL108:
 227:.././simpleserial/simpleserial.c **** 
 1111              		.loc 2 227 8 view .LVU327
 1112 00ce 6B44     		add	r3, sp, r3
 1113 00d0 A847     		blx	r5
 1114              	.LVL109:
 227:.././simpleserial/simpleserial.c **** 
 1115              		.loc 2 227 6 view .LVU328
 1116 00d2 8DF80700 		strb	r0, [sp, #7]
 1117 00d6 A3E7     		b	.L59
 1118              	.L76:
 1119              		.align	2
 1120              	.L75:
 1121 00d8 00000000 		.word	.LANCHOR0
 1122              		.cfi_endproc
 1123              	.LFE11:
 1125              		.bss
 1126              		.align	2
 1127              		.set	.LANCHOR0,. + 0
 1130              	num_commands:
 1131 0000 00000000 		.space	4
 1134              	commands:
 1135 0004 00000000 		.space	192
 1135      00000000 
 1135      00000000 
 1135      00000000 
 1135      00000000 
 1136              		.text
 1137              	.Letext0:
 1138              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1139              		.file 4 ".././hal/stm32f4/stm32f4_hal.h"
 1140              		.file 5 ".././simpleserial/simpleserial.h"
 1141              		.file 6 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 simpleserial.c
     /tmp/ccDnsL1b.s:16     .text.led_ok:0000000000000000 $t
     /tmp/ccDnsL1b.s:24     .text.led_ok:0000000000000000 led_ok
     /tmp/ccDnsL1b.s:39     .text.led_error:0000000000000000 $t
     /tmp/ccDnsL1b.s:46     .text.led_error:0000000000000000 led_error
     /tmp/ccDnsL1b.s:57     .text.ss_crc:0000000000000000 $t
     /tmp/ccDnsL1b.s:64     .text.ss_crc:0000000000000000 ss_crc
     /tmp/ccDnsL1b.s:130    .text.hex_decode:0000000000000000 $t
     /tmp/ccDnsL1b.s:137    .text.hex_decode:0000000000000000 hex_decode
     /tmp/ccDnsL1b.s:305    .text.ss_puts:0000000000000000 $t
     /tmp/ccDnsL1b.s:312    .text.ss_puts:0000000000000000 ss_puts
     /tmp/ccDnsL1b.s:347    .text.stuff_data:0000000000000000 $t
     /tmp/ccDnsL1b.s:354    .text.stuff_data:0000000000000000 stuff_data
     /tmp/ccDnsL1b.s:418    .text.unstuff_data:0000000000000000 $t
     /tmp/ccDnsL1b.s:425    .text.unstuff_data:0000000000000000 unstuff_data
     /tmp/ccDnsL1b.s:485    .text.simpleserial_addcmd:0000000000000000 $t
     /tmp/ccDnsL1b.s:492    .text.simpleserial_addcmd:0000000000000000 simpleserial_addcmd
     /tmp/ccDnsL1b.s:563    .text.simpleserial_addcmd:0000000000000030 $d
     /tmp/ccDnsL1b.s:568    .text.simpleserial_init:0000000000000000 $t
     /tmp/ccDnsL1b.s:575    .text.simpleserial_init:0000000000000000 simpleserial_init
     /tmp/ccDnsL1b.s:610    .text.simpleserial_init:000000000000001c $d
     /tmp/ccDnsL1b.s:733    .text.check_version:0000000000000000 check_version
     /tmp/ccDnsL1b.s:782    .text.ss_get_commands:0000000000000000 ss_get_commands
     /tmp/ccDnsL1b.s:616    .text.simpleserial_put:0000000000000000 $t
     /tmp/ccDnsL1b.s:623    .text.simpleserial_put:0000000000000000 simpleserial_put
     /tmp/ccDnsL1b.s:726    .text.check_version:0000000000000000 $t
     /tmp/ccDnsL1b.s:775    .text.ss_get_commands:0000000000000000 $t
     /tmp/ccDnsL1b.s:871    .text.ss_get_commands:0000000000000038 $d
     /tmp/ccDnsL1b.s:877    .text.simpleserial_get:0000000000000000 $t
     /tmp/ccDnsL1b.s:884    .text.simpleserial_get:0000000000000000 simpleserial_get
     /tmp/ccDnsL1b.s:1121   .text.simpleserial_get:00000000000000d8 $d
     /tmp/ccDnsL1b.s:1126   .bss:0000000000000000 $d
     /tmp/ccDnsL1b.s:1130   .bss:0000000000000000 num_commands
     /tmp/ccDnsL1b.s:1134   .bss:0000000000000004 commands

UNDEFINED SYMBOLS
putch
memcpy
getch
